prometheus:
  ingress:
    enabled: true
    ingressClassName: traefik
    hosts:
      - prometheus.cornfakes.xyz
    annotations:
      traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect@kubernetescrd
  prometheusSpec:
    retention: 30d
    retentionSize: "50GB"
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    resources:
      requests:
        cpu: 200m
        memory: 1Gi
      limits:
        memory: 2Gi
    podMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    enableAdminAPI: false
    walCompression: true
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node.longhorn.io/create-default-disk
              operator: DoesNotExist

alertmanager:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: traefik
    hosts:
      - alertmanager.cornfakes.xyz
    annotations:
      traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect@kubernetescrd
  alertmanagerSpec:
    retention: 120h
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        memory: 256Mi
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node.longhorn.io/create-default-disk
              operator: DoesNotExist

grafana:
  enabled: true
  admin:
    existingSecret: grafana-admin-credentials
    userKey: admin-user
    passwordKey: admin-password
  persistence:
    enabled: true
    storageClassName: longhorn
    size: 10Gi
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      memory: 512Mi
  nodeSelector:
    node-role.kubernetes.io/worker: "true"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node.longhorn.io/create-default-disk
            operator: DoesNotExist
  ingress:
    enabled: true
    ingressClassName: traefik
    hosts:
      - grafana.cornfakes.xyz
    annotations:
      traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect@kubernetescrd
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://kube-prometheus-stack-prometheus:9090
        access: proxy
        isDefault: true

kubeStateMetrics:
  enabled: true

nodeExporter:
  enabled: true
  tolerations:
  - key: "node"
    operator: "Equal"
    value: "storage"
    effect: "NoSchedule"

prometheusOperator:
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      memory: 256Mi
  nodeSelector:
    node-role.kubernetes.io/worker: "true"

defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubeControllerManager: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeSchedulerAlerting: true
    kubeSchedulerRecording: true
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true
